1. Setting up multiplayer (a basic one) is as easy as clicking the arrow next to "play" in the unreal editor and selecting the number of players in the level/game/map.
Note that as of unreal 4.25, you need to set the net mode as "play as listen server". See https://www.udemy.com/course/unrealmultiplayer/learn/lecture/7761712#overview

2. Use source tree (free!) to run version control on unreal engine programs https://www.udemy.com/course/unrealmultiplayer/learn/lecture/7761712#overview time 10:20.

3. Synchronus means "together at the same time" such as mmo's, persistent worlds, and most fps first person shooter games. Turn based games like chess played through
email are Asynchronus because you take turns and there is time lag and you each take "turns" playing.

4. Each player "state" is updated when you receive inputs from every other player in the game/network. That means the slowest connection speed is the weakest link
in this state. It's very insecure and slow. A central authority server fixes this and prevents obvious cheating. See 
https://www.udemy.com/course/unrealmultiplayer/learn/lecture/7764312#overview time 3:00

5. Servers can execute code because it HasAuthority or has server authority as opposed to clients. See 
https://www.udemy.com/course/unrealmultiplayer/learn/lecture/7778522#questions/8885998 and notice that the server can have the cube move while the client doesn't.

6. To have the server replicate actors or other things to clients and ONLY the server, use set replicates:
void AMovingPlatform::BeginPlay()
{
	Super::BeginPlay();

	SetReplicates(true);
	SetReplicateMovement(true);
}
See https://www.udemy.com/course/unrealmultiplayer/learn/lecture/7778978#questions/8885998 time 7:10

7. Authority and replication https://www.udemy.com/course/unrealmultiplayer/learn/lecture/7778978#questions/8885998 what happens if client can update positions but
the server does not, despite server being authoritative( always right). Time 10:00

8. Since server is always right, if server and client disagree, the client will see the server's real position of items and actors to it's actual original location on
the server. This would explain why objects or people "snap" back into the actual position. Server is always right! See video in #7, timestamp 15:00.

9. 
