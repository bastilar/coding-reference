1. You can enable surface snapping on the editor. You can then drag any actor (object) to snap smoothly to any surface by
dragging its origin point, usually the yellow circle.

2. You may want to turn off surface rotate leaning because if you move a tree for example, it may lean as you drag it around the surface. That doesn't
make sense as trees are always upright, normally.

3. Turns out unreal engine has a bug where it won't compile your new code so you need to hit compile again. To be safe in the future, compile twice. I just had this
bug happen.

4. If you use GetOwner() make sure to remember that if you call it in beginplay() before the actor or object is actually instantiated, you may get a null return value
because it's calling the owner before the owner actually exists.

5. Objects that cast shadows and are moveable should have their mobility properties set to "moveable". Mobility is under "transform" in editor. Failure to do so
will result in shadows that are "left behind" and glitching the look.

6. Editanywhere, uproperty, and visibleanywhere tips https://forums.unrealengine.com/t/how-do-i-expose-a-variable-in-the-editor-and-make-in-editable/1665/6 cannot
use visible or edit in the same line as a rule.

7. Syntax for binding keys to code:
	InputComponent = GetOwner()->FindComponentByClass<UInputComponent>();
	if (InputComponent)
	{
		UE_LOG(LogTemp, Warning, TEXT("Input component found on %s"), *GetOwner()->GetName());
		InputComponent->BindAction("Grab", IE_Pressed, this, &UGrabber::Grab);
	}
	else
	{
		UE_LOG(LogTemp, Error, TEXT("No input component found on object %s"), *GetOwner()->GetName() );
	}
	void UGrabber::Grab()
{
	UE_LOG(LogTemp, Warning, TEXT("Test test grab form ugrabber pressed."));
}
	
Make sure InputComponent is declared in your .header .h header files and you also set the "Grab" in code equal EXACTLY to "Grab" in your unreal editor under:
Project Settings -> Engine -> Input

8. If you're using GetOverlappingActors, make sure the actors/objects that you will check for overlapping with has the tickbox "generate overlapping events" is ticked
yes.

9. When creating a new c++ class from a blueprint, there may be a new issue bug in unreal 4.26 where it cannot find the include. You have to go into the .cpp or .h
(most likely .cpp file) and look at the includes and just trim down the include to say #include "filename.h" instead of "directory/filename.h" easy bug fix.

Afterwards, close everything and start up the project again by clicking the .uproject file and clicking "yes" to rebuilding the project file structure.

10. 
